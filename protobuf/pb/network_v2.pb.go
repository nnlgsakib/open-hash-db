// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: network_v2.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectionType int32

const (
	ConnectionType_CONNECTION_UNKNOWN ConnectionType = 0
	ConnectionType_CONNECTION_DIRECT  ConnectionType = 1
	ConnectionType_CONNECTION_RELAYED ConnectionType = 2
)

// Enum value maps for ConnectionType.
var (
	ConnectionType_name = map[int32]string{
		0: "CONNECTION_UNKNOWN",
		1: "CONNECTION_DIRECT",
		2: "CONNECTION_RELAYED",
	}
	ConnectionType_value = map[string]int32{
		"CONNECTION_UNKNOWN": 0,
		"CONNECTION_DIRECT":  1,
		"CONNECTION_RELAYED": 2,
	}
)

func (x ConnectionType) Enum() *ConnectionType {
	p := new(ConnectionType)
	*p = x
	return p
}

func (x ConnectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_network_v2_proto_enumTypes[0].Descriptor()
}

func (ConnectionType) Type() protoreflect.EnumType {
	return &file_network_v2_proto_enumTypes[0]
}

func (x ConnectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionType.Descriptor instead.
func (ConnectionType) EnumDescriptor() ([]byte, []int) {
	return file_network_v2_proto_rawDescGZIP(), []int{0}
}

type PeerQuality struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SuccessBlocks uint64                 `protobuf:"varint,1,opt,name=success_blocks,json=successBlocks,proto3" json:"success_blocks,omitempty"`
	FailedBlocks  uint64                 `protobuf:"varint,2,opt,name=failed_blocks,json=failedBlocks,proto3" json:"failed_blocks,omitempty"`
	HeartbeatsOk  uint64                 `protobuf:"varint,3,opt,name=heartbeats_ok,json=heartbeatsOk,proto3" json:"heartbeats_ok,omitempty"`
	HeartbeatsErr uint64                 `protobuf:"varint,4,opt,name=heartbeats_err,json=heartbeatsErr,proto3" json:"heartbeats_err,omitempty"`
	LatencyEma    float64                `protobuf:"fixed64,5,opt,name=latency_ema,json=latencyEma,proto3" json:"latency_ema,omitempty"` // seconds
	Score         float64                `protobuf:"fixed64,6,opt,name=score,proto3" json:"score,omitempty"`                             // convenience
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerQuality) Reset() {
	*x = PeerQuality{}
	mi := &file_network_v2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerQuality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerQuality) ProtoMessage() {}

func (x *PeerQuality) ProtoReflect() protoreflect.Message {
	mi := &file_network_v2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerQuality.ProtoReflect.Descriptor instead.
func (*PeerQuality) Descriptor() ([]byte, []int) {
	return file_network_v2_proto_rawDescGZIP(), []int{0}
}

func (x *PeerQuality) GetSuccessBlocks() uint64 {
	if x != nil {
		return x.SuccessBlocks
	}
	return 0
}

func (x *PeerQuality) GetFailedBlocks() uint64 {
	if x != nil {
		return x.FailedBlocks
	}
	return 0
}

func (x *PeerQuality) GetHeartbeatsOk() uint64 {
	if x != nil {
		return x.HeartbeatsOk
	}
	return 0
}

func (x *PeerQuality) GetHeartbeatsErr() uint64 {
	if x != nil {
		return x.HeartbeatsErr
	}
	return 0
}

func (x *PeerQuality) GetLatencyEma() float64 {
	if x != nil {
		return x.LatencyEma
	}
	return 0
}

func (x *PeerQuality) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type PeerMetadata struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PeerId         string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	Addrs          []string               `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"`
	ConnectionType ConnectionType         `protobuf:"varint,3,opt,name=connection_type,json=connectionType,proto3,enum=openhash.network.v2.ConnectionType" json:"connection_type,omitempty"`
	Quality        *PeerQuality           `protobuf:"bytes,4,opt,name=quality,proto3" json:"quality,omitempty"`
	LastSeen       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PeerMetadata) Reset() {
	*x = PeerMetadata{}
	mi := &file_network_v2_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerMetadata) ProtoMessage() {}

func (x *PeerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_network_v2_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerMetadata.ProtoReflect.Descriptor instead.
func (*PeerMetadata) Descriptor() ([]byte, []int) {
	return file_network_v2_proto_rawDescGZIP(), []int{1}
}

func (x *PeerMetadata) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *PeerMetadata) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *PeerMetadata) GetConnectionType() ConnectionType {
	if x != nil {
		return x.ConnectionType
	}
	return ConnectionType_CONNECTION_UNKNOWN
}

func (x *PeerMetadata) GetQuality() *PeerQuality {
	if x != nil {
		return x.Quality
	}
	return nil
}

func (x *PeerMetadata) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

type PeerMetadataList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Peers         []*PeerMetadata        `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerMetadataList) Reset() {
	*x = PeerMetadataList{}
	mi := &file_network_v2_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerMetadataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerMetadataList) ProtoMessage() {}

func (x *PeerMetadataList) ProtoReflect() protoreflect.Message {
	mi := &file_network_v2_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerMetadataList.ProtoReflect.Descriptor instead.
func (*PeerMetadataList) Descriptor() ([]byte, []int) {
	return file_network_v2_proto_rawDescGZIP(), []int{2}
}

func (x *PeerMetadataList) GetPeers() []*PeerMetadata {
	if x != nil {
		return x.Peers
	}
	return nil
}

type ContentBlockRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`  // hex or base32
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentBlockRef) Reset() {
	*x = ContentBlockRef{}
	mi := &file_network_v2_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentBlockRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentBlockRef) ProtoMessage() {}

func (x *ContentBlockRef) ProtoReflect() protoreflect.Message {
	mi := &file_network_v2_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentBlockRef.ProtoReflect.Descriptor instead.
func (*ContentBlockRef) Descriptor() ([]byte, []int) {
	return file_network_v2_proto_rawDescGZIP(), []int{3}
}

func (x *ContentBlockRef) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ContentBlockRef) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ContentRegistryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       *ContentBlockRef       `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Providers     []string               `protobuf:"bytes,2,rep,name=providers,proto3" json:"providers,omitempty"` // peer ids
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentRegistryEntry) Reset() {
	*x = ContentRegistryEntry{}
	mi := &file_network_v2_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentRegistryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentRegistryEntry) ProtoMessage() {}

func (x *ContentRegistryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_network_v2_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentRegistryEntry.ProtoReflect.Descriptor instead.
func (*ContentRegistryEntry) Descriptor() ([]byte, []int) {
	return file_network_v2_proto_rawDescGZIP(), []int{4}
}

func (x *ContentRegistryEntry) GetContent() *ContentBlockRef {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ContentRegistryEntry) GetProviders() []string {
	if x != nil {
		return x.Providers
	}
	return nil
}

type ContentRegistrySnapshot struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Entries       []*ContentRegistryEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentRegistrySnapshot) Reset() {
	*x = ContentRegistrySnapshot{}
	mi := &file_network_v2_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentRegistrySnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentRegistrySnapshot) ProtoMessage() {}

func (x *ContentRegistrySnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_network_v2_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentRegistrySnapshot.ProtoReflect.Descriptor instead.
func (*ContentRegistrySnapshot) Descriptor() ([]byte, []int) {
	return file_network_v2_proto_rawDescGZIP(), []int{5}
}

func (x *ContentRegistrySnapshot) GetEntries() []*ContentRegistryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// Delegated fetch messages
type DelegatedFetchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Hashes        []string               `protobuf:"bytes,2,rep,name=hashes,proto3" json:"hashes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelegatedFetchRequest) Reset() {
	*x = DelegatedFetchRequest{}
	mi := &file_network_v2_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegatedFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatedFetchRequest) ProtoMessage() {}

func (x *DelegatedFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_v2_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegatedFetchRequest.ProtoReflect.Descriptor instead.
func (*DelegatedFetchRequest) Descriptor() ([]byte, []int) {
	return file_network_v2_proto_rawDescGZIP(), []int{6}
}

func (x *DelegatedFetchRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DelegatedFetchRequest) GetHashes() []string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type DelegatedFetchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Accepted      bool                   `protobuf:"varint,2,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelegatedFetchResponse) Reset() {
	*x = DelegatedFetchResponse{}
	mi := &file_network_v2_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegatedFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatedFetchResponse) ProtoMessage() {}

func (x *DelegatedFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_v2_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegatedFetchResponse.ProtoReflect.Descriptor instead.
func (*DelegatedFetchResponse) Descriptor() ([]byte, []int) {
	return file_network_v2_proto_rawDescGZIP(), []int{7}
}

func (x *DelegatedFetchResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DelegatedFetchResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *DelegatedFetchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Relay communication placeholders for future extensions
type RelayRouteHint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelayAddrs    []string               `protobuf:"bytes,1,rep,name=relay_addrs,json=relayAddrs,proto3" json:"relay_addrs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelayRouteHint) Reset() {
	*x = RelayRouteHint{}
	mi := &file_network_v2_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelayRouteHint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayRouteHint) ProtoMessage() {}

func (x *RelayRouteHint) ProtoReflect() protoreflect.Message {
	mi := &file_network_v2_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayRouteHint.ProtoReflect.Descriptor instead.
func (*RelayRouteHint) Descriptor() ([]byte, []int) {
	return file_network_v2_proto_rawDescGZIP(), []int{8}
}

func (x *RelayRouteHint) GetRelayAddrs() []string {
	if x != nil {
		return x.RelayAddrs
	}
	return nil
}

var File_network_v2_proto protoreflect.FileDescriptor

var file_network_v2_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x61, 0x73, 0x68, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x01, 0x0a, 0x0b, 0x50, 0x65, 0x65,
	0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x73, 0x5f, 0x6f, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x68, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x73, 0x4f, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x73, 0x45, 0x72, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x65, 0x6d, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x45, 0x6d,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x0c, 0x50, 0x65, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x12, 0x4c, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x61, 0x73, 0x68, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x61, 0x73,
	0x68, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x37, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x22, 0x4b, 0x0a, 0x10, 0x50, 0x65,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x68, 0x61, 0x73, 0x68, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0x39, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x74, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x68, 0x61, 0x73, 0x68, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x66, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0x5e, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x43, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x61, 0x73, 0x68, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x4e, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c,
	0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x41, 0x64, 0x64, 0x72, 0x73, 0x2a, 0x57, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x59, 0x45,
	0x44, 0x10, 0x02, 0x42, 0x18, 0x5a, 0x16, 0x6f, 0x70, 0x65, 0x6e, 0x68, 0x61, 0x73, 0x68, 0x64,
	0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_network_v2_proto_rawDescOnce sync.Once
	file_network_v2_proto_rawDescData []byte
)

func file_network_v2_proto_rawDescGZIP() []byte {
	file_network_v2_proto_rawDescOnce.Do(func() {
		file_network_v2_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_network_v2_proto_rawDesc), len(file_network_v2_proto_rawDesc)))
	})
	return file_network_v2_proto_rawDescData
}

var file_network_v2_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_network_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_network_v2_proto_goTypes = []any{
	(ConnectionType)(0),             // 0: openhash.network.v2.ConnectionType
	(*PeerQuality)(nil),             // 1: openhash.network.v2.PeerQuality
	(*PeerMetadata)(nil),            // 2: openhash.network.v2.PeerMetadata
	(*PeerMetadataList)(nil),        // 3: openhash.network.v2.PeerMetadataList
	(*ContentBlockRef)(nil),         // 4: openhash.network.v2.ContentBlockRef
	(*ContentRegistryEntry)(nil),    // 5: openhash.network.v2.ContentRegistryEntry
	(*ContentRegistrySnapshot)(nil), // 6: openhash.network.v2.ContentRegistrySnapshot
	(*DelegatedFetchRequest)(nil),   // 7: openhash.network.v2.DelegatedFetchRequest
	(*DelegatedFetchResponse)(nil),  // 8: openhash.network.v2.DelegatedFetchResponse
	(*RelayRouteHint)(nil),          // 9: openhash.network.v2.RelayRouteHint
	(*timestamppb.Timestamp)(nil),   // 10: google.protobuf.Timestamp
}
var file_network_v2_proto_depIdxs = []int32{
	0,  // 0: openhash.network.v2.PeerMetadata.connection_type:type_name -> openhash.network.v2.ConnectionType
	1,  // 1: openhash.network.v2.PeerMetadata.quality:type_name -> openhash.network.v2.PeerQuality
	10, // 2: openhash.network.v2.PeerMetadata.last_seen:type_name -> google.protobuf.Timestamp
	2,  // 3: openhash.network.v2.PeerMetadataList.peers:type_name -> openhash.network.v2.PeerMetadata
	4,  // 4: openhash.network.v2.ContentRegistryEntry.content:type_name -> openhash.network.v2.ContentBlockRef
	5,  // 5: openhash.network.v2.ContentRegistrySnapshot.entries:type_name -> openhash.network.v2.ContentRegistryEntry
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_network_v2_proto_init() }
func file_network_v2_proto_init() {
	if File_network_v2_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_network_v2_proto_rawDesc), len(file_network_v2_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_network_v2_proto_goTypes,
		DependencyIndexes: file_network_v2_proto_depIdxs,
		EnumInfos:         file_network_v2_proto_enumTypes,
		MessageInfos:      file_network_v2_proto_msgTypes,
	}.Build()
	File_network_v2_proto = out.File
	file_network_v2_proto_goTypes = nil
	file_network_v2_proto_depIdxs = nil
}
