// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.32.0
// source: core.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Block struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_core_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Block) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ChunkInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkInfo) Reset() {
	*x = ChunkInfo{}
	mi := &file_core_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkInfo) ProtoMessage() {}

func (x *ChunkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkInfo.ProtoReflect.Descriptor instead.
func (*ChunkInfo) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{1}
}

func (x *ChunkInfo) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ChunkInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Link struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hash          []byte                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Link) Reset() {
	*x = Link{}
	mi := &file_core_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{2}
}

func (x *Link) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Link) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Link) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Link) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Directory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Links         []*Link                `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Directory) Reset() {
	*x = Directory{}
	mi := &file_core_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Directory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Directory) ProtoMessage() {}

func (x *Directory) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Directory.ProtoReflect.Descriptor instead.
func (*Directory) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{3}
}

func (x *Directory) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type ContentMetadata struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Hash           []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Filename       string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	MimeType       string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Size           int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	ModTime        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=mod_time,json=modTime,proto3" json:"mod_time,omitempty"`
	IsDirectory    bool                   `protobuf:"varint,6,opt,name=is_directory,json=isDirectory,proto3" json:"is_directory,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	RefCount       int32                  `protobuf:"varint,8,opt,name=ref_count,json=refCount,proto3" json:"ref_count,omitempty"`
	IsErasureCoded bool                   `protobuf:"varint,9,opt,name=is_erasure_coded,json=isErasureCoded,proto3" json:"is_erasure_coded,omitempty"`
	DataShards     int32                  `protobuf:"varint,10,opt,name=data_shards,json=dataShards,proto3" json:"data_shards,omitempty"`
	ParityShards   int32                  `protobuf:"varint,11,opt,name=parity_shards,json=parityShards,proto3" json:"parity_shards,omitempty"`
	Chunks         []*ChunkInfo           `protobuf:"bytes,12,rep,name=chunks,proto3" json:"chunks,omitempty"`
	Links          []*Link                `protobuf:"bytes,13,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ContentMetadata) Reset() {
	*x = ContentMetadata{}
	mi := &file_core_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentMetadata) ProtoMessage() {}

func (x *ContentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_core_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentMetadata.ProtoReflect.Descriptor instead.
func (*ContentMetadata) Descriptor() ([]byte, []int) {
	return file_core_proto_rawDescGZIP(), []int{4}
}

func (x *ContentMetadata) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ContentMetadata) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ContentMetadata) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ContentMetadata) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ContentMetadata) GetModTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ModTime
	}
	return nil
}

func (x *ContentMetadata) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

func (x *ContentMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ContentMetadata) GetRefCount() int32 {
	if x != nil {
		return x.RefCount
	}
	return 0
}

func (x *ContentMetadata) GetIsErasureCoded() bool {
	if x != nil {
		return x.IsErasureCoded
	}
	return false
}

func (x *ContentMetadata) GetDataShards() int32 {
	if x != nil {
		return x.DataShards
	}
	return 0
}

func (x *ContentMetadata) GetParityShards() int32 {
	if x != nil {
		return x.ParityShards
	}
	return 0
}

func (x *ContentMetadata) GetChunks() []*ChunkInfo {
	if x != nil {
		return x.Chunks
	}
	return nil
}

func (x *ContentMetadata) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

var File_core_proto protoreflect.FileDescriptor

const file_core_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"core.proto\x12\acore.pb\x1a\x1fgoogle/protobuf/timestamp.proto\"/\n" +
	"\x05Block\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"3\n" +
	"\tChunkInfo\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\"V\n" +
	"\x04Link\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\fR\x04hash\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\"0\n" +
	"\tDirectory\x12#\n" +
	"\x05links\x18\x01 \x03(\v2\r.core.pb.LinkR\x05links\"\xe5\x03\n" +
	"\x0fContentMetadata\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x125\n" +
	"\bmod_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\amodTime\x12!\n" +
	"\fis_directory\x18\x06 \x01(\bR\visDirectory\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1b\n" +
	"\tref_count\x18\b \x01(\x05R\brefCount\x12(\n" +
	"\x10is_erasure_coded\x18\t \x01(\bR\x0eisErasureCoded\x12\x1f\n" +
	"\vdata_shards\x18\n" +
	" \x01(\x05R\n" +
	"dataShards\x12#\n" +
	"\rparity_shards\x18\v \x01(\x05R\fparityShards\x12*\n" +
	"\x06chunks\x18\f \x03(\v2\x12.core.pb.ChunkInfoR\x06chunks\x12#\n" +
	"\x05links\x18\r \x03(\v2\r.core.pb.LinkR\x05linksB\x18Z\x16openhashdb/protobuf/pbb\x06proto3"

var (
	file_core_proto_rawDescOnce sync.Once
	file_core_proto_rawDescData []byte
)

func file_core_proto_rawDescGZIP() []byte {
	file_core_proto_rawDescOnce.Do(func() {
		file_core_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_proto_rawDesc), len(file_core_proto_rawDesc)))
	})
	return file_core_proto_rawDescData
}

var file_core_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_core_proto_goTypes = []any{
	(*Block)(nil),                 // 0: core.pb.Block
	(*ChunkInfo)(nil),             // 1: core.pb.ChunkInfo
	(*Link)(nil),                  // 2: core.pb.Link
	(*Directory)(nil),             // 3: core.pb.Directory
	(*ContentMetadata)(nil),       // 4: core.pb.ContentMetadata
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_core_proto_depIdxs = []int32{
	2, // 0: core.pb.Directory.links:type_name -> core.pb.Link
	5, // 1: core.pb.ContentMetadata.mod_time:type_name -> google.protobuf.Timestamp
	5, // 2: core.pb.ContentMetadata.created_at:type_name -> google.protobuf.Timestamp
	1, // 3: core.pb.ContentMetadata.chunks:type_name -> core.pb.ChunkInfo
	2, // 4: core.pb.ContentMetadata.links:type_name -> core.pb.Link
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_core_proto_init() }
func file_core_proto_init() {
	if File_core_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_proto_rawDesc), len(file_core_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_proto_goTypes,
		DependencyIndexes: file_core_proto_depIdxs,
		MessageInfos:      file_core_proto_msgTypes,
	}.Build()
	File_core_proto = out.File
	file_core_proto_goTypes = nil
	file_core_proto_depIdxs = nil
}
